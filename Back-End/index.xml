<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Submitter Documentation</title>
    <link>http://comp350spring2021.github.io/Back-End/</link>
    <description>Recent content on Submitter Documentation</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="http://comp350spring2021.github.io/Back-End/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://comp350spring2021.github.io/Back-End/DockerTest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://comp350spring2021.github.io/Back-End/DockerTest/</guid>
      <description>This will describe how we test the functionality of our custom container and subexecutor script. These tests are to be very basic and treated like unit tests to ensure that we have the functionallity down for deployment and future tests.
Test Files     The files used for testing are:
 test.in test.out &amp;lt;MD5&amp;gt;.py  Test 1     We are simulating an event assignment in which the admin wants students to write a python program that takes any number of integers from the command line and sums them together.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://comp350spring2021.github.io/Back-End/ExampleSubmissionJSON/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://comp350spring2021.github.io/Back-End/ExampleSubmissionJSON/</guid>
      <description>When a student submits code via the front end web interface, a similar json file is created as shown below, and stored within the s3 bucket.
{ &amp;quot;submissionid&amp;quot;: &amp;quot;fc55c0190dde2bc413d8d1e79fb8cca2&amp;quot;, &amp;quot;admin&amp;quot;: &amp;quot;m.soltys&amp;quot;, &amp;quot;event&amp;quot;: &amp;quot;aws labs&amp;quot;, &amp;quot;problem&amp;quot;: &amp;quot;lab 5 - containers&amp;quot;, &amp;quot;tokens&amp;quot;: [ &amp;quot;d823640ab3b0f7a4a2bc9fc89661e940&amp;quot;, &amp;quot;240669d4326dea48bba75e066b90b76f&amp;quot;, &amp;quot;4b31d568d86a9350d746c7c2fe9bf5c8&amp;quot; ] } </description>
    </item>
    
  </channel>
</rss>
